<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="restaurantReview">

	<!-- 회원 레스토랑 리뷰 관리 갯수  -->
 	<select id="memReviewCount" parameterType="String" resultType="int">
 		select count(*) from restaurant_re where id=#{value}
 	</select>

 	
 	<!-- 레스토랑 리뷰 이미지 이름 숫자 카운트 업 -->
 	<insert id="ImgcountInsert">
 		insert into fileNum values(fileNum_seq.nextval)
 	</insert>
 	
 	
 	<!-- 레스토랑 리뷰 이미지 이름 숫자 카운트 가져오기 -->
 	<select id="ImgCount" resultType="int">
 		select max(num) from fileNum
 	</select>
 	
 	
	<!-- 레스토랑 리뷰 쓰기 -->
 	<insert id="insert" parameterType="restaurantReviewVO">
 		insert into restaurant_re(num,cnum,id,nick,text,img,reg_date) values (restaurant_re_seq.nextval,#{cnum},#{id},#{nick},#{text},#{img},sysdate)
 	</insert>
 	
	<!-- 레스토랑 리뷰 갯수 -->
 	<select id="count" parameterType="String" resultType="int">
 		select count(*) from restaurant_re
 		<if test="value != null">
 		 where cnum=#{value}
 		 </if>
 	</select>
	
	<!-- 레스토랑 리뷰 가져오기 -->
 	<select id="select" parameterType="map" resultType="restaurantReviewVO">
 	   select num,cnum,id,nick,text,img,reg_date,r 
 	   from (select num,cnum,id,nick,text,img,reg_date,rownum r
 	   from (select num,cnum,id,nick,text,img,reg_date  
 	   <choose>
 	   	<when test="cnum != null">
 	   	<![CDATA[from restaurant_re where cnum=#{cnum} order by reg_date desc)order by reg_date desc)]]>
 	   	</when>
 	   	<when test="id !=null">
 	   	<![CDATA[from restaurant_re where id=#{id} order by reg_date desc)order by reg_date desc)]]>
 	   	</when>
 	   	<otherwise>
 	   	 <![CDATA[from restaurant_re order by reg_date desc)order by reg_date desc)]]>
 	   	</otherwise>
 	   </choose>
 	      <![CDATA[  where r>=#{startRow} and r<=#{endRow} ]]>
 	</select>
 	
 	
 	<!-- 레스토랑 리뷰 삭제 아이디값 비교 -->
 	<select id="idSelect" parameterType="int" resultType="String">
 	  select id from restaurant_re where num=#{num}
 	</select>
 	
 	<!-- 레스토랑 리뷰 삭제 -->
 	<delete id="delete" parameterType="int">
 		delete from restaurant_re where num = #{value}
 	</delete>
 	
 	<!-- 레스토랑 리뷰 수정 -->
 	<update id="update" parameterType="restaurantReviewVO">
 		update restaurant_re set text=#{text} where num=#{num} 
 	</update>
 	
 	
 	<!-- 레스토랑 리뷰 텍스트 가져오기 -->
 	<select id="text" parameterType="int" resultType="String">
 		select text from restaurant_re where num=#{num}
 	</select>
 	
 	<!-- 레스토랑 리뷰 좋아요 클릭 여부 체크 -->
 	<select id="check" parameterType="restaurantReviewNiceVO" resultType="int">
 		select count(*) from restaurant_re_nice where renum=#{renum} and id=#{id}
 	</select>
 	
 	<!-- 레시피 리뷰 쪼아요 갯수 -->
 	<select id="niceCount" parameterType="int" resultType="int">
 		select count(*) from restaurant_re_nice where renum=#{value}
 	</select>	
 	
 	<!-- 레시피 리뷰 쪼아요 -->
 	<insert id="niceInsert" parameterType="restaurantReviewNiceVO">
 		insert into restaurant_re_nice values (restaurant_re_nice_seq.nextval, #{id}, #{renum})
 	</insert>
 	
 	<!-- 레시피 리뷰 쪼아요 해제 -->
 	<delete id="niceDelete" parameterType="restaurantReviewNiceVO">
 		delete from restaurant_re_nice where id=#{id} and renum= #{renum}
 	</delete>
</mapper>
